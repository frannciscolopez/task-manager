{"ast":null,"code":"import { saveAs } from 'file-saver';\nconst JSON_FILENAME = 'tasks.json';\nexport const loadTasksFromJsonFile = () => {\n  try {\n    const jsonTasks = localStorage.getItem(JSON_FILENAME);\n    return jsonTasks ? JSON.parse(jsonTasks) : [];\n  } catch (error) {\n    console.error('Error loading tasks:', error);\n    return [];\n  }\n};\nconst saveTasksToJsonFile = tasks => {\n  try {\n    const jsonTasks = JSON.stringify(tasks);\n    localStorage.setItem(JSON_FILENAME, jsonTasks);\n  } catch (error) {\n    console.error('Error saving tasks:', error);\n  }\n};\nexport const addTaskToJson = task => {\n  const existingTasks = loadTasksFromJsonFile();\n  const taskId = existingTasks.length;\n  const newTask = {\n    ...task,\n    id: taskId\n  };\n  const updatedTasks = [...existingTasks, newTask];\n  saveTasksToJsonFile(updatedTasks);\n};\nexport const removeTaskFromJson = taskId => {\n  const existingTasks = loadTasksFromJsonFile();\n  const updatedTasks = existingTasks.filter(task => task.id !== parseInt(taskId));\n  console.log(\"updatedTasks: \", updatedTasks);\n  saveTasksToJsonFile(updatedTasks);\n};\nexport const updateTaskFieldInJson = (taskId, fieldToUpdate, updatedValue) => {\n  const existingTasks = loadTasksFromJsonFile();\n  const updatedTasks = existingTasks.map(task => {\n    if (task.id === taskId) {\n      return {\n        ...task,\n        [fieldToUpdate]: updatedValue\n      };\n    }\n    return task;\n  });\n  saveTasksToJsonFile(updatedTasks);\n};\nconst saveTasksAsJSON = tasks => {\n  const jsonData = JSON.stringify(tasks, null, 2);\n  const blob = new Blob([jsonData], {\n    type: 'application/json'\n  });\n  saveAs(blob, 'tasks.json');\n};\nconst addTask = newTask => {\n  const updatedTasks = [...tasks, newTask];\n  setTasks(updatedTasks);\n  const jsonData = JSON.stringify(updatedTasks, null, 2);\n  const blob = new Blob([jsonData], {\n    type: 'application/json'\n  });\n  saveAs(blob, 'tasks.json');\n};\nconst updateTask = (taskId, updatedTask) => {\n  const updatedTasks = tasks.map(task => task.id === taskId ? {\n    ...task,\n    ...updatedTask\n  } : task);\n  setTasks(updatedTasks);\n  const jsonData = JSON.stringify(updatedTasks, null, 2);\n  const blob = new Blob([jsonData], {\n    type: 'application/json'\n  });\n  saveAs(blob, 'tasks.json');\n};\nconst removeTask = taskId => {\n  const updatedTasks = tasks.filter(task => task.id !== taskId);\n  setTasks(updatedTasks);\n  const jsonData = JSON.stringify(updatedTasks, null, 2);\n  const blob = new Blob([jsonData], {\n    type: 'application/json'\n  });\n  saveAs(blob, 'tasks.json');\n};","map":{"version":3,"names":["saveAs","JSON_FILENAME","loadTasksFromJsonFile","jsonTasks","localStorage","getItem","JSON","parse","error","console","saveTasksToJsonFile","tasks","stringify","setItem","addTaskToJson","task","existingTasks","taskId","length","newTask","id","updatedTasks","removeTaskFromJson","filter","parseInt","log","updateTaskFieldInJson","fieldToUpdate","updatedValue","map","saveTasksAsJSON","jsonData","blob","Blob","type","addTask","setTasks","updateTask","updatedTask","removeTask"],"sources":["/Users/franciscolopezmartinez/Desktop/task-manager-test/src/helper.js"],"sourcesContent":["import { saveAs } from 'file-saver';\n\nconst JSON_FILENAME = 'tasks.json';\n\nexport const loadTasksFromJsonFile = () => {\n  try {\n    const jsonTasks = localStorage.getItem(JSON_FILENAME);\n    return jsonTasks ? JSON.parse(jsonTasks) : [];\n  } catch (error) {\n    console.error('Error loading tasks:', error);\n    return [];\n  }\n};\n\nconst saveTasksToJsonFile = (tasks) => {\n  try {\n    const jsonTasks = JSON.stringify(tasks);\n    localStorage.setItem(JSON_FILENAME, jsonTasks);\n  } catch (error) {\n    console.error('Error saving tasks:', error);\n  }\n};\n\nexport const addTaskToJson = (task) => {\n  const existingTasks = loadTasksFromJsonFile();\n  const taskId = existingTasks.length;\n\n  const newTask = {\n    ...task,\n    id: taskId,\n  };\n\n  const updatedTasks = [...existingTasks, newTask];\n\n  saveTasksToJsonFile(updatedTasks);\n};\n\n\nexport const removeTaskFromJson = (taskId) => {\n  const existingTasks = loadTasksFromJsonFile();\n  const updatedTasks = existingTasks.filter((task) => task.id !== parseInt(taskId));\n  console.log(\"updatedTasks: \" ,updatedTasks);\n  saveTasksToJsonFile(updatedTasks);\n};\n\nexport const updateTaskFieldInJson = (taskId, fieldToUpdate, updatedValue) => {\n  const existingTasks = loadTasksFromJsonFile();\n  const updatedTasks = existingTasks.map((task) => {\n    if (task.id === taskId) {\n      return {\n        ...task,\n        [fieldToUpdate]: updatedValue,\n      };\n    }\n    return task;\n  });\n  saveTasksToJsonFile(updatedTasks);\n};\n  \n\nconst saveTasksAsJSON = (tasks) => {\n  const jsonData = JSON.stringify(tasks, null, 2);\n  const blob = new Blob([jsonData], { type: 'application/json' });\n  saveAs(blob, 'tasks.json');\n};\n\nconst addTask = (newTask) => {\n  const updatedTasks = [...tasks, newTask];\n  setTasks(updatedTasks);\n  const jsonData = JSON.stringify(updatedTasks, null, 2);\n  const blob = new Blob([jsonData], { type: 'application/json' });\n  saveAs(blob, 'tasks.json');\n};\n\nconst updateTask = (taskId, updatedTask) => {\n  const updatedTasks = tasks.map((task) =>\n    task.id === taskId ? { ...task, ...updatedTask } : task\n  );\n  setTasks(updatedTasks);\n  const jsonData = JSON.stringify(updatedTasks, null, 2);\n  const blob = new Blob([jsonData], { type: 'application/json' });\n  saveAs(blob, 'tasks.json');\n};\n\nconst removeTask = (taskId) => {\n  const updatedTasks = tasks.filter((task) => task.id !== taskId);\n  setTasks(updatedTasks);\n  const jsonData = JSON.stringify(updatedTasks, null, 2);\n  const blob = new Blob([jsonData], { type: 'application/json' });\n  saveAs(blob, 'tasks.json');\n};\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}