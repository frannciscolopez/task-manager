{"ast":null,"code":"import { saveAs } from 'file-saver';\nconst JSON_FILENAME = 'tasks.json';\nconst TASKS = 'tasks';\nconst CURRENT_ID = 'currentId';\nexport function saveTasksToJsonFile(tasks) {\n  try {\n    const jsonTasks = JSON.stringify(tasks, null, 2);\n    localStorage.setItem(JSON_FILENAME, jsonTasks);\n  } catch (error) {\n    console.error('Error saving tasks:', error);\n  }\n}\n;\nexport function initializeTasksAndCurrentId(setTasks, setCurrentId) {\n  const storedTasks = JSON.parse(localStorage.getItem(TASKS)) || [];\n  const storedCurrentId = JSON.parse(localStorage.getItem(CURRENT_ID)) || 0;\n  setTasks(storedTasks);\n  setCurrentId(storedCurrentId);\n}\nexport function updateLocalStorage(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\nexport function addTask(newTask, currentId, tasks, setTasks, setCurrentId) {\n  newTask.id = currentId;\n  setCurrentId(currentId + 1);\n  const updatedTasks = [...tasks, newTask];\n  setTasks(updatedTasks);\n  updateLocalStorage(TASKS, updatedTasks);\n  updateLocalStorage(CURRENT_ID, currentId + 1);\n}\nexport function deleteTask(taskId, tasks, setTasks) {\n  const updatedTasks = tasks.filter(task => task.id !== parseInt(taskId));\n  setTasks(updatedTasks);\n  updateLocalStorage(TASKS, updatedTasks);\n}\nexport function updateTask(taskId, fieldToUpdate, newValue, tasks, setTasks) {\n  const taskIndex = tasks.findIndex(task => task.id === parseInt(taskId));\n  if (taskIndex === -1) {\n    console.error('Task not found with the provided ID.');\n    return;\n  }\n  const updatedTasks = [...tasks];\n  updatedTasks[taskIndex] = {\n    ...updatedTasks[taskIndex],\n    [fieldToUpdate]: newValue\n  };\n  setTasks(updatedTasks);\n  updateLocalStorage(TASKS, updatedTasks);\n}","map":{"version":3,"names":["saveAs","JSON_FILENAME","TASKS","CURRENT_ID","saveTasksToJsonFile","tasks","jsonTasks","JSON","stringify","localStorage","setItem","error","console","initializeTasksAndCurrentId","setTasks","setCurrentId","storedTasks","parse","getItem","storedCurrentId","updateLocalStorage","key","value","addTask","newTask","currentId","id","updatedTasks","deleteTask","taskId","filter","task","parseInt","updateTask","fieldToUpdate","newValue","taskIndex","findIndex"],"sources":["/Users/franciscolopezmartinez/Desktop/task-manager-test/src/helper.js"],"sourcesContent":["import { saveAs } from 'file-saver';\n\nconst JSON_FILENAME = 'tasks.json';\n\nconst TASKS = 'tasks';\nconst CURRENT_ID = 'currentId';\n\nexport function saveTasksToJsonFile (tasks) {\n  try {\n    const jsonTasks = JSON.stringify(tasks, null, 2);\n    localStorage.setItem(JSON_FILENAME, jsonTasks);\n  } catch (error) {\n    console.error('Error saving tasks:', error);\n  }\n};\n\nexport function initializeTasksAndCurrentId(setTasks, setCurrentId) {\n    const storedTasks = JSON.parse(localStorage.getItem(TASKS)) || [];\n    const storedCurrentId = JSON.parse(localStorage.getItem(CURRENT_ID)) || 0;\n    setTasks(storedTasks);\n    setCurrentId(storedCurrentId);\n  }\n  \n  export function updateLocalStorage(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n  \n  export function addTask(\n    newTask,\n    currentId,\n    tasks,\n    setTasks,\n    setCurrentId\n  ) {\n    newTask.id = currentId;\n    setCurrentId(currentId + 1);\n  \n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n  \n    updateLocalStorage(TASKS, updatedTasks);\n    updateLocalStorage(CURRENT_ID, currentId + 1);\n  }\n  \n  export function deleteTask(taskId, tasks, setTasks) {\n    const updatedTasks = tasks.filter((task) => task.id !== parseInt(taskId));\n    setTasks(updatedTasks);\n    updateLocalStorage(TASKS, updatedTasks);\n  }\n  \n  export function updateTask(\n    taskId,\n    fieldToUpdate,\n    newValue,\n    tasks,\n    setTasks\n  ) {\n    const taskIndex = tasks.findIndex((task) => task.id === parseInt(taskId));\n  \n    if (taskIndex === -1) {\n      console.error('Task not found with the provided ID.');\n      return;\n    }\n  \n    const updatedTasks = [...tasks];\n    updatedTasks[taskIndex] = {\n      ...updatedTasks[taskIndex],\n      [fieldToUpdate]: newValue,\n    };\n  \n    setTasks(updatedTasks);\n    updateLocalStorage(TASKS, updatedTasks);\n  }\n  "],"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAEnC,MAAMC,aAAa,GAAG,YAAY;AAElC,MAAMC,KAAK,GAAG,OAAO;AACrB,MAAMC,UAAU,GAAG,WAAW;AAE9B,OAAO,SAASC,mBAAmBA,CAAEC,KAAK,EAAE;EAC1C,IAAI;IACF,MAAMC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAChDI,YAAY,CAACC,OAAO,CAACT,aAAa,EAAEK,SAAS,CAAC;EAChD,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC7C;AACF;AAAC;AAED,OAAO,SAASE,2BAA2BA,CAACC,QAAQ,EAAEC,YAAY,EAAE;EAChE,MAAMC,WAAW,GAAGT,IAAI,CAACU,KAAK,CAACR,YAAY,CAACS,OAAO,CAAChB,KAAK,CAAC,CAAC,IAAI,EAAE;EACjE,MAAMiB,eAAe,GAAGZ,IAAI,CAACU,KAAK,CAACR,YAAY,CAACS,OAAO,CAACf,UAAU,CAAC,CAAC,IAAI,CAAC;EACzEW,QAAQ,CAACE,WAAW,CAAC;EACrBD,YAAY,CAACI,eAAe,CAAC;AAC/B;AAEA,OAAO,SAASC,kBAAkBA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC7Cb,YAAY,CAACC,OAAO,CAACW,GAAG,EAAEd,IAAI,CAACC,SAAS,CAACc,KAAK,CAAC,CAAC;AAClD;AAEA,OAAO,SAASC,OAAOA,CACrBC,OAAO,EACPC,SAAS,EACTpB,KAAK,EACLS,QAAQ,EACRC,YAAY,EACZ;EACAS,OAAO,CAACE,EAAE,GAAGD,SAAS;EACtBV,YAAY,CAACU,SAAS,GAAG,CAAC,CAAC;EAE3B,MAAME,YAAY,GAAG,CAAC,GAAGtB,KAAK,EAAEmB,OAAO,CAAC;EACxCV,QAAQ,CAACa,YAAY,CAAC;EAEtBP,kBAAkB,CAAClB,KAAK,EAAEyB,YAAY,CAAC;EACvCP,kBAAkB,CAACjB,UAAU,EAAEsB,SAAS,GAAG,CAAC,CAAC;AAC/C;AAEA,OAAO,SAASG,UAAUA,CAACC,MAAM,EAAExB,KAAK,EAAES,QAAQ,EAAE;EAClD,MAAMa,YAAY,GAAGtB,KAAK,CAACyB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKM,QAAQ,CAACH,MAAM,CAAC,CAAC;EACzEf,QAAQ,CAACa,YAAY,CAAC;EACtBP,kBAAkB,CAAClB,KAAK,EAAEyB,YAAY,CAAC;AACzC;AAEA,OAAO,SAASM,UAAUA,CACxBJ,MAAM,EACNK,aAAa,EACbC,QAAQ,EACR9B,KAAK,EACLS,QAAQ,EACR;EACA,MAAMsB,SAAS,GAAG/B,KAAK,CAACgC,SAAS,CAAEN,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKM,QAAQ,CAACH,MAAM,CAAC,CAAC;EAEzE,IAAIO,SAAS,KAAK,CAAC,CAAC,EAAE;IACpBxB,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAC;IACrD;EACF;EAEA,MAAMgB,YAAY,GAAG,CAAC,GAAGtB,KAAK,CAAC;EAC/BsB,YAAY,CAACS,SAAS,CAAC,GAAG;IACxB,GAAGT,YAAY,CAACS,SAAS,CAAC;IAC1B,CAACF,aAAa,GAAGC;EACnB,CAAC;EAEDrB,QAAQ,CAACa,YAAY,CAAC;EACtBP,kBAAkB,CAAClB,KAAK,EAAEyB,YAAY,CAAC;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}