{"ast":null,"code":"var _jsxFileName = \"/Users/franciscolopezmartinez/Desktop/task-manager-test/src/helper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Load tasks from tasks.json when the component mounts\n    fetch('tasks.json').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error loading tasks:', error));\n  }, []);\n  const saveTasksAsJSON = () => {\n    const jsonData = JSON.stringify(tasks, null, 2);\n    const blob = new Blob([jsonData], {\n      type: 'application/json'\n    });\n\n    // Save tasks to the same \"tasks.json\" file\n    saveAs(blob, 'tasks.json');\n  };\n  const addTask = newTask => {\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n    saveTasksAsJSON();\n  };\n  const updateTask = (taskId, updatedTask) => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      ...updatedTask\n    } : task);\n    setTasks(updatedTasks);\n    saveTasksAsJSON();\n  };\n  const removeTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n    saveTasksAsJSON();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveTasksAsJSON,\n      children: \"Save Tasks as JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask({\n        id: tasks.length,\n        title: 'New Task',\n        description: '',\n        status: 'Incomplete'\n      }),\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateTask(1, {\n        status: 'Complete'\n      }),\n      children: \"Update Task 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeTask(2),\n      children: \"Remove Task 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","saveAs","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetch","then","response","json","data","catch","error","console","saveTasksAsJSON","jsonData","JSON","stringify","blob","Blob","type","addTask","newTask","updatedTasks","updateTask","taskId","updatedTask","map","task","id","removeTask","filter","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","title","description","status","_c","$RefreshReg$"],"sources":["/Users/franciscolopezmartinez/Desktop/task-manager-test/src/helper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { saveAs } from 'file-saver';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    // Load tasks from tasks.json when the component mounts\n    fetch('tasks.json')\n      .then((response) => response.json())\n      .then((data) => setTasks(data))\n      .catch((error) => console.error('Error loading tasks:', error));\n  }, []);\n\n  const saveTasksAsJSON = () => {\n    const jsonData = JSON.stringify(tasks, null, 2);\n    const blob = new Blob([jsonData], { type: 'application/json' });\n\n    // Save tasks to the same \"tasks.json\" file\n    saveAs(blob, 'tasks.json');\n  };\n\n  const addTask = (newTask) => {\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n    saveTasksAsJSON();\n  };\n\n  const updateTask = (taskId, updatedTask) => {\n    const updatedTasks = tasks.map((task) =>\n      task.id === taskId ? { ...task, ...updatedTask } : task\n    );\n    setTasks(updatedTasks);\n    saveTasksAsJSON();\n  };\n\n  const removeTask = (taskId) => {\n    const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    setTasks(updatedTasks);\n    saveTasksAsJSON();\n  };\n\n  return (\n    <div>\n      <button onClick={saveTasksAsJSON}>Save Tasks as JSON</button>\n      <button onClick={() => addTask({ id: tasks.length, title: 'New Task', description: '', status: 'Incomplete' })}>Add New Task</button>\n      <button onClick={() => updateTask(1, { status: 'Complete' })}>Update Task 1</button>\n      <button onClick={() => removeTask(2)}>Remove Task 2</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}