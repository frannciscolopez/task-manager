{"ast":null,"code":"var _jsxFileName = \"/Users/franciscolopezmartinez/task-manager/src/components/TaskCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../TaskCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  onAddTask,\n  onShowTasks\n}) => {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    status: 'Incomplete'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: () => setShowForm(true),\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: () => onShowTasks(),\n        children: \"Show Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        children: \"Update Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        children: \"Delete Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: () => {\n        // Handle adding task here or pass it to the parent component\n        setShowForm(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"yQsEHoBbntuAxdgCswmySWfUgCE=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskCard","onAddTask","onShowTasks","_s","showForm","setShowForm","newTask","setNewTask","title","description","dueDate","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","TaskForm","_c","$RefreshReg$"],"sources":["/Users/franciscolopezmartinez/task-manager/src/components/TaskCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../TaskCard.css';\n\n\nconst TaskCard = ({ onAddTask, onShowTasks }) => {\n  const [showForm, setShowForm] = useState(false);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    status: 'Incomplete',\n  });\n\n  return (\n    <div className=\"task-card\">\n      <h2>Task Card</h2>\n      <div className=\"button-container\">\n        <button className=\"action-button\" onClick={() => setShowForm(true)}>\n          New Task\n        </button>\n        <button className=\"action-button\" onClick={() => onShowTasks()}>\n          Show Tasks\n        </button>\n        <button className=\"action-button\">Update Tasks</button>\n        <button className=\"action-button\">Delete Task</button>\n      </div>\n      {showForm && (\n      <TaskForm\n        onAddTask={() => {\n          // Handle adding task here or pass it to the parent component\n          setShowForm(false);\n        }}\n      />\n    )}\n    </div>\n  );\n};\n\nexport default TaskCard;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC;IACrCW,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,oBACEZ,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/Bd,OAAA;QAAQa,SAAS,EAAC,eAAe;QAACM,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAAC,IAAI,CAAE;QAAAQ,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTlB,OAAA;QAAQa,SAAS,EAAC,eAAe;QAACM,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAAC,CAAE;QAAAW,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTlB,OAAA;QAAQa,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvDlB,OAAA;QAAQa,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,EACLb,QAAQ,iBACTL,OAAA,CAACoB,QAAQ;MACPlB,SAAS,EAAEA,CAAA,KAAM;QACf;QACAI,WAAW,CAAC,KAAK,CAAC;MACpB;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEV,CAAC;AAACd,EAAA,CAhCIH,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}