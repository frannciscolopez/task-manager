{"ast":null,"code":"var _jsxFileName = \"/Users/franciscolopezmartinez/task-manager/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MainCard from './components/MainCard';\nimport NewTaskCard from './components/NewTaskCard';\nimport ShowTasksCard from './components/ShowTaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentCard, setCurrentCard] = useState('main');\n  const [tasks, setTasks] = useState([]); // Initialize tasks with an empty array\n\n  // Load tasks from localStorage when the component mounts\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    setTasks(storedTasks);\n  }, []);\n  const showNewTaskCard = () => setCurrentCard('newTask');\n  const showShowTasksCard = () => setCurrentCard('showTasks');\n  const showMainCard = () => setCurrentCard('main');\n  const addTask = newTask => {\n    // Update tasks in state\n    setTasks([...tasks, newTask]);\n\n    // Update tasks in localStorage\n    const updatedTasks = [...tasks, newTask];\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currentCard === 'main' && /*#__PURE__*/_jsxDEV(MainCard, {\n      onNewTask: showNewTaskCard,\n      onShowTasks: showShowTasksCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), currentCard === 'newTask' && /*#__PURE__*/_jsxDEV(NewTaskCard, {\n      onBackToMainCard: showMainCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), currentCard === 'showTasks' && /*#__PURE__*/_jsxDEV(ShowTasksCard, {\n      tasks: tasks,\n      onBackToMainCard: showMainCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B7bpWHWlaXxmkV1D6OJCHdnAizI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MainCard","NewTaskCard","ShowTasksCard","jsxDEV","_jsxDEV","App","_s","currentCard","setCurrentCard","tasks","setTasks","storedTasks","JSON","parse","localStorage","getItem","showNewTaskCard","showShowTasksCard","showMainCard","addTask","newTask","updatedTasks","setItem","stringify","className","children","onNewTask","onShowTasks","fileName","_jsxFileName","lineNumber","columnNumber","onBackToMainCard","_c","$RefreshReg$"],"sources":["/Users/franciscolopezmartinez/task-manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MainCard from './components/MainCard';\nimport NewTaskCard from './components/NewTaskCard';\nimport ShowTasksCard from './components/ShowTaskCard';\n\nfunction App() {\n  const [currentCard, setCurrentCard] = useState('main');\n  const [tasks, setTasks] = useState([]); // Initialize tasks with an empty array\n\n  // Load tasks from localStorage when the component mounts\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    setTasks(storedTasks);\n  }, []);\n\n  const showNewTaskCard = () => setCurrentCard('newTask');\n  const showShowTasksCard = () => setCurrentCard('showTasks');\n  const showMainCard = () => setCurrentCard('main');\n\n  const addTask = (newTask) => {\n    // Update tasks in state\n    setTasks([...tasks, newTask]);\n    \n    // Update tasks in localStorage\n    const updatedTasks = [...tasks, newTask];\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n  };\n\n  return (\n    <div className=\"App\">\n      {currentCard === 'main' && (\n        <MainCard onNewTask={showNewTaskCard} onShowTasks={showShowTasksCard} />\n      )}\n      {currentCard === 'newTask' && (\n        <NewTaskCard onBackToMainCard={showMainCard} />\n      )}\n      {currentCard === 'showTasks' && (\n        <ShowTasksCard tasks={tasks} onBackToMainCard={showMainCard} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IACnEL,QAAQ,CAACC,WAAW,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAGA,CAAA,KAAMR,cAAc,CAAC,SAAS,CAAC;EACvD,MAAMS,iBAAiB,GAAGA,CAAA,KAAMT,cAAc,CAAC,WAAW,CAAC;EAC3D,MAAMU,YAAY,GAAGA,CAAA,KAAMV,cAAc,CAAC,MAAM,CAAC;EAEjD,MAAMW,OAAO,GAAIC,OAAO,IAAK;IAC3B;IACAV,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEW,OAAO,CAAC,CAAC;;IAE7B;IACA,MAAMC,YAAY,GAAG,CAAC,GAAGZ,KAAK,EAAEW,OAAO,CAAC;IACxCN,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEV,IAAI,CAACW,SAAS,CAACF,YAAY,CAAC,CAAC;EAC7D,CAAC;EAED,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBlB,WAAW,KAAK,MAAM,iBACrBH,OAAA,CAACJ,QAAQ;MAAC0B,SAAS,EAAEV,eAAgB;MAACW,WAAW,EAAEV;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxE,EACAxB,WAAW,KAAK,SAAS,iBACxBH,OAAA,CAACH,WAAW;MAAC+B,gBAAgB,EAAEd;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC/C,EACAxB,WAAW,KAAK,WAAW,iBAC1BH,OAAA,CAACF,aAAa;MAACO,KAAK,EAAEA,KAAM;MAACuB,gBAAgB,EAAEd;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC/D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CApCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}