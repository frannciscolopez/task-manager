{"ast":null,"code":"import _defineProperty from\"/Users/franciscolopezmartinez/Desktop/task-manager-test/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/franciscolopezmartinez/Desktop/task-manager-test/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/franciscolopezmartinez/Desktop/task-manager-test/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";var TASKS='tasks';var CURRENT_ID='currentId';export function initializeTasksAndCurrentId(setTasks,setCurrentId){var storedTasks=JSON.parse(localStorage.getItem(TASKS))||[];var storedCurrentId=JSON.parse(localStorage.getItem(CURRENT_ID))||0;setTasks(storedTasks);setCurrentId(storedCurrentId);}export function updateLocalStorage(key,value){localStorage.setItem(key,JSON.stringify(value));}export function addTask(newTask,currentId,tasks,setTasks,setCurrentId){newTask.id=currentId;setCurrentId(currentId+1);var updatedTasks=[].concat(_toConsumableArray(tasks),[newTask]);setTasks(updatedTasks);updateLocalStorage(TASKS,updatedTasks);updateLocalStorage(CURRENT_ID,currentId+1);}export function deleteTask(taskId,tasks,setTasks){var updatedTasks=tasks.filter(function(task){return task.id!==parseInt(taskId);});setTasks(updatedTasks);updateLocalStorage(TASKS,updatedTasks);}export function updateTask(taskId,fieldToUpdate,newValue,tasks,setTasks){var taskIndex=tasks.findIndex(function(task){return task.id===parseInt(taskId);});if(taskIndex===-1){console.error('Task not found with the provided ID.');return;}var updatedTasks=_toConsumableArray(tasks);updatedTasks[taskIndex]=_objectSpread(_objectSpread({},updatedTasks[taskIndex]),{},_defineProperty({},fieldToUpdate,newValue));setTasks(updatedTasks);updateLocalStorage(TASKS,updatedTasks);}","map":{"version":3,"names":["TASKS","CURRENT_ID","initializeTasksAndCurrentId","setTasks","setCurrentId","storedTasks","JSON","parse","localStorage","getItem","storedCurrentId","updateLocalStorage","key","value","setItem","stringify","addTask","newTask","currentId","tasks","id","updatedTasks","concat","_toConsumableArray","deleteTask","taskId","filter","task","parseInt","updateTask","fieldToUpdate","newValue","taskIndex","findIndex","console","error","_objectSpread","_defineProperty"],"sources":["/Users/franciscolopezmartinez/Desktop/task-manager-test/src/helper.js"],"sourcesContent":["\nconst TASKS = 'tasks';\nconst CURRENT_ID = 'currentId';\n\nexport function initializeTasksAndCurrentId(setTasks, setCurrentId) {\n    const storedTasks = JSON.parse(localStorage.getItem(TASKS)) || [];\n    const storedCurrentId = JSON.parse(localStorage.getItem(CURRENT_ID)) || 0;\n    setTasks(storedTasks);\n    setCurrentId(storedCurrentId);\n  }\n  \n  export function updateLocalStorage(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n  \n  export function addTask(\n    newTask,\n    currentId,\n    tasks,\n    setTasks,\n    setCurrentId\n  ) {\n    newTask.id = currentId;\n    setCurrentId(currentId + 1);\n  \n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n  \n    updateLocalStorage(TASKS, updatedTasks);\n    updateLocalStorage(CURRENT_ID, currentId + 1);\n  }\n  \n  export function deleteTask(taskId, tasks, setTasks) {\n    const updatedTasks = tasks.filter((task) => task.id !== parseInt(taskId));\n    setTasks(updatedTasks);\n    updateLocalStorage(TASKS, updatedTasks);\n  }\n  \n  export function updateTask(\n    taskId,\n    fieldToUpdate,\n    newValue,\n    tasks,\n    setTasks\n  ) {\n    const taskIndex = tasks.findIndex((task) => task.id === parseInt(taskId));\n  \n    if (taskIndex === -1) {\n      console.error('Task not found with the provided ID.');\n      return;\n    }\n  \n    const updatedTasks = [...tasks];\n    updatedTasks[taskIndex] = {\n      ...updatedTasks[taskIndex],\n      [fieldToUpdate]: newValue,\n    };\n  \n    setTasks(updatedTasks);\n    updateLocalStorage(TASKS, updatedTasks);\n  }\n  "],"mappings":"gbACA,GAAM,CAAAA,KAAK,CAAG,OAAO,CACrB,GAAM,CAAAC,UAAU,CAAG,WAAW,CAE9B,MAAO,SAAS,CAAAC,2BAA2BA,CAACC,QAAQ,CAAEC,YAAY,CAAE,CAChE,GAAM,CAAAC,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACT,KAAK,CAAC,CAAC,EAAI,EAAE,CACjE,GAAM,CAAAU,eAAe,CAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACR,UAAU,CAAC,CAAC,EAAI,CAAC,CACzEE,QAAQ,CAACE,WAAW,CAAC,CACrBD,YAAY,CAACM,eAAe,CAAC,CAC/B,CAEA,MAAO,SAAS,CAAAC,kBAAkBA,CAACC,GAAG,CAAEC,KAAK,CAAE,CAC7CL,YAAY,CAACM,OAAO,CAACF,GAAG,CAAEN,IAAI,CAACS,SAAS,CAACF,KAAK,CAAC,CAAC,CAClD,CAEA,MAAO,SAAS,CAAAG,OAAOA,CACrBC,OAAO,CACPC,SAAS,CACTC,KAAK,CACLhB,QAAQ,CACRC,YAAY,CACZ,CACAa,OAAO,CAACG,EAAE,CAAGF,SAAS,CACtBd,YAAY,CAACc,SAAS,CAAG,CAAC,CAAC,CAE3B,GAAM,CAAAG,YAAY,IAAAC,MAAA,CAAAC,kBAAA,CAAOJ,KAAK,GAAEF,OAAO,EAAC,CACxCd,QAAQ,CAACkB,YAAY,CAAC,CAEtBV,kBAAkB,CAACX,KAAK,CAAEqB,YAAY,CAAC,CACvCV,kBAAkB,CAACV,UAAU,CAAEiB,SAAS,CAAG,CAAC,CAAC,CAC/C,CAEA,MAAO,SAAS,CAAAM,UAAUA,CAACC,MAAM,CAAEN,KAAK,CAAEhB,QAAQ,CAAE,CAClD,GAAM,CAAAkB,YAAY,CAAGF,KAAK,CAACO,MAAM,CAAC,SAACC,IAAI,QAAK,CAAAA,IAAI,CAACP,EAAE,GAAKQ,QAAQ,CAACH,MAAM,CAAC,GAAC,CACzEtB,QAAQ,CAACkB,YAAY,CAAC,CACtBV,kBAAkB,CAACX,KAAK,CAAEqB,YAAY,CAAC,CACzC,CAEA,MAAO,SAAS,CAAAQ,UAAUA,CACxBJ,MAAM,CACNK,aAAa,CACbC,QAAQ,CACRZ,KAAK,CACLhB,QAAQ,CACR,CACA,GAAM,CAAA6B,SAAS,CAAGb,KAAK,CAACc,SAAS,CAAC,SAACN,IAAI,QAAK,CAAAA,IAAI,CAACP,EAAE,GAAKQ,QAAQ,CAACH,MAAM,CAAC,GAAC,CAEzE,GAAIO,SAAS,GAAK,CAAC,CAAC,CAAE,CACpBE,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC,CACrD,OACF,CAEA,GAAM,CAAAd,YAAY,CAAAE,kBAAA,CAAOJ,KAAK,CAAC,CAC/BE,YAAY,CAACW,SAAS,CAAC,CAAAI,aAAA,CAAAA,aAAA,IAClBf,YAAY,CAACW,SAAS,CAAC,KAAAK,eAAA,IACzBP,aAAa,CAAGC,QAAQ,EAC1B,CAED5B,QAAQ,CAACkB,YAAY,CAAC,CACtBV,kBAAkB,CAACX,KAAK,CAAEqB,YAAY,CAAC,CACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}