{"ast":null,"code":"var _jsxFileName = \"/Users/franciscolopezmartinez/task-manager/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport OptionsPanel from './OptionsPanel';\nimport NewTask from './NewTask';\nimport ShowTask from './ShowTask';\nimport UpdateTask from './UpdateTask';\nimport RemoveTask from './RemoveTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAIN_CARD = 'main';\nconst NEW_TASK_CARD = 'newTask';\nconst SHOW_TASKS_CARD = 'showTasks';\nconst UPDATE_TASK_CARD = 'updateTask';\nconst REMOVE_TASK_CARD = 'removeTask';\nconst Card = ({}) => {\n  _s();\n  const [currentCard, setCurrentCard] = useState('main');\n  const [tasks, setTasks] = useState([]);\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    initializeTasksAndCurrentId(setTasks, setCurrentId);\n  }, []);\n  const handleAddTask = newTask => {\n    addTask(newTask, currentId, tasks, setTasks, setCurrentId);\n  };\n  const handleDeleteTask = taskId => {\n    deleteTask(taskId, tasks, setTasks);\n  };\n  const handleUpdateTask = (taskId, fieldToUpdate, newValue) => {\n    updateTask(taskId, fieldToUpdate, newValue, tasks, setTasks);\n  };\n  const changeCard = card => {\n    setCurrentCard(card);\n  };\n  const renderCard = () => {\n    switch (currentCard) {\n      case MAIN_CARD:\n        return /*#__PURE__*/_jsxDEV(OptionsPanel, {\n          changeCard: changeCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n      case NEW_TASK_CARD:\n        return /*#__PURE__*/_jsxDEV(NewTask, {\n          onAddTask: handleAddTask,\n          onBackToOptionsPanel: () => changeCard(MAIN_CARD)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this);\n      case SHOW_TASKS_CARD:\n        return /*#__PURE__*/_jsxDEV(ShowTask, {\n          tasks: tasks,\n          onBackToOptionsPanel: () => changeCard(MAIN_CARD)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this);\n      case UPDATE_TASK_CARD:\n        return /*#__PURE__*/_jsxDEV(UpdateTask, {\n          onUpdateTask: handleUpdateTask,\n          onBackToOptionsPanel: () => changeCard(MAIN_CARD)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this);\n      case REMOVE_TASK_CARD:\n        return /*#__PURE__*/_jsxDEV(RemoveTask, {\n          onDeleteTask: handleDeleteTask,\n          onBackToOptionsPanel: () => changeCard(MAIN_CARD)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: renderCard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(Card, \"nWgp4HI5tygAW84PtmXOatVTfFo=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","OptionsPanel","NewTask","ShowTask","UpdateTask","RemoveTask","jsxDEV","_jsxDEV","MAIN_CARD","NEW_TASK_CARD","SHOW_TASKS_CARD","UPDATE_TASK_CARD","REMOVE_TASK_CARD","Card","_s","currentCard","setCurrentCard","useState","tasks","setTasks","currentId","setCurrentId","useEffect","initializeTasksAndCurrentId","handleAddTask","newTask","addTask","handleDeleteTask","taskId","deleteTask","handleUpdateTask","fieldToUpdate","newValue","updateTask","changeCard","card","renderCard","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","onBackToOptionsPanel","onUpdateTask","onDeleteTask","className","children","_c","$RefreshReg$"],"sources":["/Users/franciscolopezmartinez/task-manager/src/components/Card.js"],"sourcesContent":["import React from 'react';\n\nimport OptionsPanel from './OptionsPanel';\nimport NewTask from './NewTask';\nimport ShowTask from './ShowTask';\nimport UpdateTask from './UpdateTask';\nimport RemoveTask from './RemoveTask';\n\nconst MAIN_CARD = 'main';\nconst NEW_TASK_CARD = 'newTask';\nconst SHOW_TASKS_CARD = 'showTasks';\nconst UPDATE_TASK_CARD = 'updateTask';\nconst REMOVE_TASK_CARD = 'removeTask';\n\nconst Card = ({}) => {\n\n    const [currentCard, setCurrentCard] = useState('main');\n    const [tasks, setTasks] = useState([]);\n    const [currentId, setCurrentId] = useState(0);\n  \n    useEffect(() => {\n      initializeTasksAndCurrentId(setTasks, setCurrentId);\n    }, []);\n    \n    const handleAddTask = (newTask) => {\n      addTask(newTask, currentId, tasks, setTasks, setCurrentId);\n    };\n  \n    const handleDeleteTask = (taskId) => {\n      deleteTask(taskId, tasks, setTasks);\n    };\n  \n    const handleUpdateTask = (taskId, fieldToUpdate, newValue) => {\n      updateTask(taskId, fieldToUpdate, newValue, tasks, setTasks);\n    };\n  \n    const changeCard = (card) => {\n      setCurrentCard(card);\n    };\n\n  const renderCard = () => {\n    switch (currentCard) {\n      case MAIN_CARD:\n        return <OptionsPanel\n        changeCard={changeCard}/> ;\n      case NEW_TASK_CARD:\n        return <NewTask onAddTask={handleAddTask} onBackToOptionsPanel={() => changeCard(MAIN_CARD)} />;\n      case SHOW_TASKS_CARD:\n        return <ShowTask tasks={tasks} onBackToOptionsPanel={() => changeCard(MAIN_CARD)} />;\n      case UPDATE_TASK_CARD:\n        return <UpdateTask onUpdateTask={handleUpdateTask} onBackToOptionsPanel={() => changeCard(MAIN_CARD)} />;\n      case REMOVE_TASK_CARD:\n        return <RemoveTask onDeleteTask={handleDeleteTask} onBackToOptionsPanel={() => changeCard(MAIN_CARD)} />;\n      default:\n        return null; \n    }\n  };\n\n  return <div className=\"card-container\">{renderCard()}</div>;\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}