{"ast":null,"code":"var _jsxFileName = \"/Users/franciscolopezmartinez/task-manager/src/components/TaskCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../TaskCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  onAddTask,\n  onShowTasks\n}) => {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    status: 'Incomplete'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-card\",\n    children: [showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: () => setShowForm(false),\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: () => setShowForm(false),\n        children: \"Show Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        children: \"Update Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        children: \"Delete Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTask.title,\n            onChange: e => setNewTask({\n              ...newTask,\n              title: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTask.description,\n            onChange: e => setNewTask({\n              ...newTask,\n              description: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Due Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newTask.dueDate,\n            onChange: e => setNewTask({\n              ...newTask,\n              dueDate: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newTask.status,\n            onChange: e => setNewTask({\n              ...newTask,\n              status: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Incomplete\",\n              children: \"Incomplete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Complete\",\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: () => {\n            onAddTask(newTask);\n            setShowForm(false);\n            setNewTask({\n              title: '',\n              description: '',\n              dueDate: '',\n              status: 'Incomplete'\n            });\n          },\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"yQsEHoBbntuAxdgCswmySWfUgCE=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskCard","onAddTask","onShowTasks","_s","showForm","setShowForm","newTask","setNewTask","title","description","dueDate","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/franciscolopezmartinez/task-manager/src/components/TaskCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../TaskCard.css';\n\nconst TaskCard = ({ onAddTask, onShowTasks }) => {\n  const [showForm, setShowForm] = useState(false);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    status: 'Incomplete',\n  });\n\n  return (\n    <div className=\"task-card\"> \n      \n      {showForm && (\n      <div className=\"button-container\">\n      <h2>Task Card</h2>\n        <button className=\"action-button\" onClick={() => setShowForm(false)}>\n          New Task\n        </button>\n        <button className=\"action-button\" onClick={() => setShowForm(false)}>\n          Show Tasks\n        </button>\n        <button className=\"action-button\">Update Tasks</button>\n        <button className=\"action-button\">Delete Task</button>\n      </div>\n      )}\n      {showForm && (\n        <div className=\"form-container\">\n          <h3>Create New Task</h3>\n          <form>\n            <div>\n              <label>Title:</label>\n              <input\n                type=\"text\"\n                value={newTask.title}\n                onChange={(e) =>\n                  setNewTask({ ...newTask, title: e.target.value })\n                }\n                required\n              />\n            </div>\n            <div>\n              <label>Description:</label>\n              <input\n                type=\"text\"\n                value={newTask.description}\n                onChange={(e) =>\n                  setNewTask({ ...newTask, description: e.target.value })\n                }\n                required\n              />\n            </div>\n            <div>\n              <label>Due Date:</label>\n              <input\n                type=\"date\"\n                value={newTask.dueDate}\n                onChange={(e) =>\n                  setNewTask({ ...newTask, dueDate: e.target.value })\n                }\n                required\n              />\n            </div>\n            <div>\n              <label>Status:</label>\n              <select\n                value={newTask.status}\n                onChange={(e) =>\n                  setNewTask({ ...newTask, status: e.target.value })\n                }\n                required\n              >\n                <option value=\"Incomplete\">Incomplete</option>\n                <option value=\"Complete\">Complete</option>\n              </select>\n            </div>\n            <button\n              className=\"action-button\"\n              onClick={() => {\n                onAddTask(newTask);\n                setShowForm(false);\n                setNewTask({\n                  title: '',\n                  description: '',\n                  dueDate: '',\n                  status: 'Incomplete',\n                });\n              }}\n            >\n              Add Task\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskCard;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}