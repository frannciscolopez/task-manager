{"ast":null,"code":"var _jsxFileName = \"/Users/franciscolopezmartinez/task-manager/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MainCard from './components/MainCard';\nimport NewTaskCard from './components/NewTaskCard';\nimport ShowTasksCard from './components/ShowTaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentCard, setCurrentCard] = useState('main');\n  const [tasks, setTasks] = useState([]);\n  const [currentId, setCurrentId] = useState(0); // Initialize the current ID to 0\n\n  // Load tasks and current ID from localStorage when the component mounts\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    const storedCurrentId = JSON.parse(localStorage.getItem('currentId')) || 0;\n    setTasks(storedTasks);\n    setCurrentId(storedCurrentId);\n  }, []);\n  const showNewTaskCard = () => setCurrentCard('newTask');\n  const showShowTasksCard = () => setCurrentCard('showTasks');\n  const showMainCard = () => setCurrentCard('main');\n  const addTask = newTask => {\n    // Assign the current ID to the new task and then increment it\n    newTask.id = currentId;\n    setCurrentId(currentId + 1);\n\n    // Update tasks in state\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n\n    // Update tasks and current ID in localStorage\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    localStorage.setItem('currentId', JSON.stringify(currentId + 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currentCard === 'main' && /*#__PURE__*/_jsxDEV(MainCard, {\n      onNewTask: showNewTaskCard,\n      onShowTasks: showShowTasksCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), currentCard === 'newTask' && /*#__PURE__*/_jsxDEV(NewTaskCard, {\n      onBackToMainCard: showMainCard,\n      onAddTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), currentCard === 'showTasks' && /*#__PURE__*/_jsxDEV(ShowTasksCard, {\n      tasks: tasks,\n      onBackToMainCard: showMainCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nWgp4HI5tygAW84PtmXOatVTfFo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MainCard","NewTaskCard","ShowTasksCard","jsxDEV","_jsxDEV","App","_s","currentCard","setCurrentCard","tasks","setTasks","currentId","setCurrentId","storedTasks","JSON","parse","localStorage","getItem","storedCurrentId","showNewTaskCard","showShowTasksCard","showMainCard","addTask","newTask","id","updatedTasks","setItem","stringify","className","children","onNewTask","onShowTasks","fileName","_jsxFileName","lineNumber","columnNumber","onBackToMainCard","onAddTask","_c","$RefreshReg$"],"sources":["/Users/franciscolopezmartinez/task-manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MainCard from './components/MainCard';\nimport NewTaskCard from './components/NewTaskCard';\nimport ShowTasksCard from './components/ShowTaskCard';\n\n\nfunction App() {\n  const [currentCard, setCurrentCard] = useState('main');\n  const [tasks, setTasks] = useState([]);\n  const [currentId, setCurrentId] = useState(0); // Initialize the current ID to 0\n\n  // Load tasks and current ID from localStorage when the component mounts\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    const storedCurrentId = JSON.parse(localStorage.getItem('currentId')) || 0;\n    setTasks(storedTasks);\n    setCurrentId(storedCurrentId);\n  }, []);\n\n  const showNewTaskCard = () => setCurrentCard('newTask');\n  const showShowTasksCard = () => setCurrentCard('showTasks');\n  const showMainCard = () => setCurrentCard('main');\n\n  const addTask = (newTask) => {\n    // Assign the current ID to the new task and then increment it\n    newTask.id = currentId;\n    setCurrentId(currentId + 1);\n\n    // Update tasks in state\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n\n    // Update tasks and current ID in localStorage\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    localStorage.setItem('currentId', JSON.stringify(currentId + 1));\n  };\n\n  return (\n    <div className=\"App\">\n      {currentCard === 'main' && (\n        <MainCard onNewTask={showNewTaskCard} onShowTasks={showShowTasksCard} />\n      )}\n      {currentCard === 'newTask' && (\n        <NewTaskCard onBackToMainCard={showMainCard} onAddTask={addTask} />\n      )}\n      {currentCard === 'showTasks' && (\n        <ShowTasksCard tasks={tasks} onBackToMainCard={showMainCard} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IACnE,MAAMC,eAAe,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;IAC1EP,QAAQ,CAACG,WAAW,CAAC;IACrBD,YAAY,CAACM,eAAe,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAGA,CAAA,KAAMX,cAAc,CAAC,SAAS,CAAC;EACvD,MAAMY,iBAAiB,GAAGA,CAAA,KAAMZ,cAAc,CAAC,WAAW,CAAC;EAC3D,MAAMa,YAAY,GAAGA,CAAA,KAAMb,cAAc,CAAC,MAAM,CAAC;EAEjD,MAAMc,OAAO,GAAIC,OAAO,IAAK;IAC3B;IACAA,OAAO,CAACC,EAAE,GAAGb,SAAS;IACtBC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;;IAE3B;IACA,MAAMc,YAAY,GAAG,CAAC,GAAGhB,KAAK,EAAEc,OAAO,CAAC;IACxCb,QAAQ,CAACe,YAAY,CAAC;;IAEtB;IACAT,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEZ,IAAI,CAACa,SAAS,CAACF,YAAY,CAAC,CAAC;IAC3DT,YAAY,CAACU,OAAO,CAAC,WAAW,EAAEZ,IAAI,CAACa,SAAS,CAAChB,SAAS,GAAG,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,oBACEP,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBtB,WAAW,KAAK,MAAM,iBACrBH,OAAA,CAACJ,QAAQ;MAAC8B,SAAS,EAAEX,eAAgB;MAACY,WAAW,EAAEX;IAAkB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxE,EACA5B,WAAW,KAAK,SAAS,iBACxBH,OAAA,CAACH,WAAW;MAACmC,gBAAgB,EAAEf,YAAa;MAACgB,SAAS,EAAEf;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnE,EACA5B,WAAW,KAAK,WAAW,iBAC1BH,OAAA,CAACF,aAAa;MAACO,KAAK,EAAEA,KAAM;MAAC2B,gBAAgB,EAAEf;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC/D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC7B,EAAA,CA5CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}