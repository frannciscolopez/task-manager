{"ast":null,"code":"import { saveAs } from 'file-saver';\nconst saveTasksAsJSON = tasks => {\n  const jsonData = JSON.stringify(tasks);\n  const blob = new Blob([jsonData], {\n    type: 'application/json'\n  });\n  saveAs(blob, 'tasks.json');\n};\nexport const addTask = (newTask, tasks, setTasks) => {\n  const maxId = tasks.reduce((max, task) => task.id > max ? task.id : max, -1);\n  newTask.id = maxId + 1;\n  const updatedTasks = [...tasks, newTask];\n  setTasks(updatedTasks);\n  saveTasksAsJSON(tasks);\n};\nconst updateTask = (taskId, fieldToUpdate, newValue, tasks, setTasks) => {\n  const updatedTasks = tasks.map(task => {\n    if (task.id === taskId) {\n      return {\n        ...task,\n        [fieldToUpdate]: newValue\n      };\n    }\n    return task;\n  });\n  setTasks(updatedTasks);\n  saveTasksAsJSON(tasks);\n};\nexport const removeTask = (taskId, setTasks, tasks) => {\n  const updatedTasks = tasks.filter(task => task.id !== taskId);\n  setTasks(updatedTasks);\n  saveTasksAsJSON(tasks);\n};","map":{"version":3,"names":["saveAs","saveTasksAsJSON","tasks","jsonData","JSON","stringify","blob","Blob","type","addTask","newTask","setTasks","maxId","reduce","max","task","id","updatedTasks","updateTask","taskId","fieldToUpdate","newValue","map","removeTask","filter"],"sources":["/Users/franciscolopezmartinez/Desktop/task-manager-test/src/helper.js"],"sourcesContent":["import { saveAs } from 'file-saver';\n\n  const saveTasksAsJSON = (tasks) => {\n    const jsonData = JSON.stringify(tasks);\n    const blob = new Blob([jsonData], { type: 'application/json' });\n    saveAs(blob, 'tasks.json');\n  };\n\n  export const addTask = (newTask, tasks, setTasks) => {\n    const maxId = tasks.reduce((max, task) => (task.id > max ? task.id : max), -1);\n    newTask.id = maxId + 1;\n    \n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n    saveTasksAsJSON(tasks);\n  };\n\n  const updateTask = (taskId, fieldToUpdate, newValue, tasks, setTasks) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          [fieldToUpdate]: newValue,\n        };\n      }\n      return task;\n    });\n  \n    setTasks(updatedTasks);\n    saveTasksAsJSON(tasks);\n  };\n  \n\n  export const removeTask = (taskId, setTasks, tasks) => {\n    const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    setTasks(updatedTasks);\n    saveTasksAsJSON(tasks);\n  };\n\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAEjC,MAAMC,eAAe,GAAIC,KAAK,IAAK;EACjC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;EACtC,MAAMI,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,QAAQ,CAAC,EAAE;IAAEK,IAAI,EAAE;EAAmB,CAAC,CAAC;EAC/DR,MAAM,CAACM,IAAI,EAAE,YAAY,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMG,OAAO,GAAGA,CAACC,OAAO,EAAER,KAAK,EAAES,QAAQ,KAAK;EACnD,MAAMC,KAAK,GAAGV,KAAK,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAMA,IAAI,CAACC,EAAE,GAAGF,GAAG,GAAGC,IAAI,CAACC,EAAE,GAAGF,GAAI,EAAE,CAAC,CAAC,CAAC;EAC9EJ,OAAO,CAACM,EAAE,GAAGJ,KAAK,GAAG,CAAC;EAEtB,MAAMK,YAAY,GAAG,CAAC,GAAGf,KAAK,EAAEQ,OAAO,CAAC;EACxCC,QAAQ,CAACM,YAAY,CAAC;EACtBhB,eAAe,CAACC,KAAK,CAAC;AACxB,CAAC;AAED,MAAMgB,UAAU,GAAGA,CAACC,MAAM,EAAEC,aAAa,EAAEC,QAAQ,EAAEnB,KAAK,EAAES,QAAQ,KAAK;EACvE,MAAMM,YAAY,GAAGf,KAAK,CAACoB,GAAG,CAAEP,IAAI,IAAK;IACvC,IAAIA,IAAI,CAACC,EAAE,KAAKG,MAAM,EAAE;MACtB,OAAO;QACL,GAAGJ,IAAI;QACP,CAACK,aAAa,GAAGC;MACnB,CAAC;IACH;IACA,OAAON,IAAI;EACb,CAAC,CAAC;EAEFJ,QAAQ,CAACM,YAAY,CAAC;EACtBhB,eAAe,CAACC,KAAK,CAAC;AACxB,CAAC;AAGD,OAAO,MAAMqB,UAAU,GAAGA,CAACJ,MAAM,EAAER,QAAQ,EAAET,KAAK,KAAK;EACrD,MAAMe,YAAY,GAAGf,KAAK,CAACsB,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKG,MAAM,CAAC;EAC/DR,QAAQ,CAACM,YAAY,CAAC;EACtBhB,eAAe,CAACC,KAAK,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}