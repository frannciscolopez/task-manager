{"ast":null,"code":"var _jsxFileName = \"/Users/franciscolopezmartinez/task-manager/src/components/TaskManager.js\";\nimport React, { Component } from 'react';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TaskManager extends Component {\n  constructor() {\n    super();\n    this.addTask = newTask => {\n      this.setState(prevState => {\n        const updatedTasks = [...prevState.tasks, newTask];\n        this.saveTasksToLocalStorage(updatedTasks);\n        return {\n          tasks: updatedTasks\n        };\n      });\n    };\n    this.updateTask = (taskId, updatedText) => {\n      this.setState(prevState => {\n        const updatedTasks = prevState.tasks.map(task => task.id === taskId ? {\n          ...task,\n          text: updatedText\n        } : task);\n        this.saveTasksToLocalStorage(updatedTasks);\n        return {\n          tasks: updatedTasks\n        };\n      });\n    };\n    this.deleteTask = taskId => {\n      this.setState(prevState => {\n        const updatedTasks = prevState.tasks.filter(task => task.id !== taskId);\n        this.saveTasksToLocalStorage(updatedTasks);\n        return {\n          tasks: updatedTasks\n        };\n      });\n    };\n    this.state = {\n      tasks: this.loadTasksFromLocalStorage()\n    };\n  }\n\n  // Load tasks from local storage\n  loadTasksFromLocalStorage() {\n    const storedTasks = localStorage.getItem('tasks');\n    return storedTasks ? JSON.parse(storedTasks) : [];\n  }\n\n  // Save tasks to local storage\n  saveTasksToLocalStorage(tasks) {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        addTask: this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks,\n        updateTask: this.updateTask,\n        deleteTask: this.deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TaskManager;","map":{"version":3,"names":["React","Component","TaskList","TaskForm","jsxDEV","_jsxDEV","TaskManager","constructor","addTask","newTask","setState","prevState","updatedTasks","tasks","saveTasksToLocalStorage","updateTask","taskId","updatedText","map","task","id","text","deleteTask","filter","state","loadTasksFromLocalStorage","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/franciscolopezmartinez/task-manager/src/components/TaskManager.js"],"sourcesContent":["import React, { Component } from 'react';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\n\nclass TaskManager extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: this.loadTasksFromLocalStorage(),\n    };\n  }\n\n  // Load tasks from local storage\n  loadTasksFromLocalStorage() {\n    const storedTasks = localStorage.getItem('tasks');\n    return storedTasks ? JSON.parse(storedTasks) : [];\n  }\n\n  // Save tasks to local storage\n  saveTasksToLocalStorage(tasks) {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  addTask = (newTask) => {\n    this.setState((prevState) => {\n      const updatedTasks = [...prevState.tasks, newTask];\n      this.saveTasksToLocalStorage(updatedTasks);\n      return { tasks: updatedTasks };\n    });\n  };\n\n  updateTask = (taskId, updatedText) => {\n    this.setState((prevState) => {\n      const updatedTasks = prevState.tasks.map((task) =>\n        task.id === taskId ? { ...task, text: updatedText } : task\n      );\n      this.saveTasksToLocalStorage(updatedTasks);\n      return { tasks: updatedTasks };\n    });\n  };\n\n  deleteTask = (taskId) => {\n    this.setState((prevState) => {\n      const updatedTasks = prevState.tasks.filter((task) => task.id !== taskId);\n      this.saveTasksToLocalStorage(updatedTasks);\n      return { tasks: updatedTasks };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Task Manager</h1>\n        <TaskForm addTask={this.addTask} />\n        <TaskList\n          tasks={this.state.tasks}\n          updateTask={this.updateTask}\n          deleteTask={this.deleteTask}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TaskManager;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,SAASL,SAAS,CAAC;EAClCM,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAiBVC,OAAO,GAAIC,OAAO,IAAK;MACrB,IAAI,CAACC,QAAQ,CAAEC,SAAS,IAAK;QAC3B,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,CAACE,KAAK,EAAEJ,OAAO,CAAC;QAClD,IAAI,CAACK,uBAAuB,CAACF,YAAY,CAAC;QAC1C,OAAO;UAAEC,KAAK,EAAED;QAAa,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDG,UAAU,GAAG,CAACC,MAAM,EAAEC,WAAW,KAAK;MACpC,IAAI,CAACP,QAAQ,CAAEC,SAAS,IAAK;QAC3B,MAAMC,YAAY,GAAGD,SAAS,CAACE,KAAK,CAACK,GAAG,CAAEC,IAAI,IAC5CA,IAAI,CAACC,EAAE,KAAKJ,MAAM,GAAG;UAAE,GAAGG,IAAI;UAAEE,IAAI,EAAEJ;QAAY,CAAC,GAAGE,IACxD,CAAC;QACD,IAAI,CAACL,uBAAuB,CAACF,YAAY,CAAC;QAC1C,OAAO;UAAEC,KAAK,EAAED;QAAa,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDU,UAAU,GAAIN,MAAM,IAAK;MACvB,IAAI,CAACN,QAAQ,CAAEC,SAAS,IAAK;QAC3B,MAAMC,YAAY,GAAGD,SAAS,CAACE,KAAK,CAACU,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAAC;QACzE,IAAI,CAACF,uBAAuB,CAACF,YAAY,CAAC;QAC1C,OAAO;UAAEC,KAAK,EAAED;QAAa,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC;IAxCC,IAAI,CAACY,KAAK,GAAG;MACXX,KAAK,EAAE,IAAI,CAACY,yBAAyB,CAAC;IACxC,CAAC;EACH;;EAEA;EACAA,yBAAyBA,CAAA,EAAG;IAC1B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,OAAOF,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,GAAG,EAAE;EACnD;;EAEA;EACAZ,uBAAuBA,CAACD,KAAK,EAAE;IAC7Bc,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAACnB,KAAK,CAAC,CAAC;EACtD;EA4BAoB,MAAMA,CAAA,EAAG;IACP,oBACE5B,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAA6B,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBjC,OAAA,CAACF,QAAQ;QAACK,OAAO,EAAE,IAAI,CAACA;MAAQ;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCjC,OAAA,CAACH,QAAQ;QACPW,KAAK,EAAE,IAAI,CAACW,KAAK,CAACX,KAAM;QACxBE,UAAU,EAAE,IAAI,CAACA,UAAW;QAC5BO,UAAU,EAAE,IAAI,CAACA;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAehC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}