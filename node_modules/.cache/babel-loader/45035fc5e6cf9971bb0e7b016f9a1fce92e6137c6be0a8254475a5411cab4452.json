{"ast":null,"code":"var _jsxFileName = \"/Users/franciscolopezmartinez/task-manager/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport OptionsPanel from './components/OptionsPanel';\nimport NewTask from './components/NewTask';\nimport ShowTasks from './components/ShowTask';\nimport UpdateTask from './components/UpdateTask';\nimport RemoveTask from './components/RemoveTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [current, setCurrent] = useState('main');\n  const [tasks, setTasks] = useState([]);\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    const storedCurrentId = JSON.parse(localStorage.getItem('currentId')) || 0;\n    setTasks(storedTasks);\n    setCurrentId(storedCurrentId);\n  }, []);\n  const showNewTask = () => setCurrent('newTask');\n  const showShowTasks = () => setCurrent('showTasks');\n  const showUpdateTask = () => setCurrent('updateTask');\n  const showRemoveTask = () => setCurrent('removeTask');\n  const showOptionsPanel = () => setCurrent('main');\n  const addTask = newTask => {\n    newTask.id = currentId;\n    setCurrentId(currentId + 1);\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    localStorage.setItem('currentId', JSON.stringify(currentId + 1));\n  };\n  const deleteTask = taskId => {\n    // Filter out the task with the provided ID\n    const updatedTasks = tasks.filter(task => task.id !== parseInt(taskId));\n    setTasks(updatedTasks);\n\n    // Update tasks in localStorage\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n  };\n  const updateTask = (taskId, fieldToUpdate, newValue) => {\n    // Find the task with the provided ID\n    const taskIndex = tasks.findIndex(task => task.id === parseInt(taskId));\n    if (taskIndex === -1) {\n      alert('Task not found with the provided ID.');\n      return;\n    }\n    // Create a copy of the task with the updated field\n    const updatedTasks = [...tasks];\n    updatedTasks[taskIndex] = {\n      ...updatedTasks[taskIndex],\n      [fieldToUpdate]: newValue\n    };\n    setTasks(updatedTasks);\n\n    // Update tasks in localStorage\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [current === 'main' && /*#__PURE__*/_jsxDEV(OptionsPanel, {\n      onNewTask: showNewTask,\n      onShowTasks: showShowTasks,\n      onUpdateTask: showUpdateTask,\n      onRemoveTask: showRemoveTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), current === 'newTask' && /*#__PURE__*/_jsxDEV(NewTask, {\n      onBackToOptionsPanel: showOptionsPanel,\n      onAddTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), current === 'showTasks' && /*#__PURE__*/_jsxDEV(ShowTasks, {\n      tasks: tasks,\n      onBackToOptionsPanel: showOptionsPanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), current === 'updateTask' && /*#__PURE__*/_jsxDEV(UpdateTask, {\n      onUpdateTask: updateTask,\n      onBackToOptionsPanel: showOptionsPanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), current === 'removeTask' && /*#__PURE__*/_jsxDEV(RemoveTask, {\n      onDeleteTask: deleteTask,\n      onBackToOptionsPanel: showOptionsPanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gqYNIRu8GTaGgEl9nxzqhVNEKC8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","OptionsPanel","NewTask","ShowTasks","UpdateTask","RemoveTask","jsxDEV","_jsxDEV","App","_s","current","setCurrent","tasks","setTasks","currentId","setCurrentId","storedTasks","JSON","parse","localStorage","getItem","storedCurrentId","showNewTask","showShowTasks","showUpdateTask","showRemoveTask","showOptionsPanel","addTask","newTask","id","updatedTasks","setItem","stringify","deleteTask","taskId","filter","task","parseInt","updateTask","fieldToUpdate","newValue","taskIndex","findIndex","alert","className","children","onNewTask","onShowTasks","onUpdateTask","onRemoveTask","fileName","_jsxFileName","lineNumber","columnNumber","onBackToOptionsPanel","onAddTask","onDeleteTask","_c","$RefreshReg$"],"sources":["/Users/franciscolopezmartinez/task-manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport OptionsPanel from './components/OptionsPanel';\nimport NewTask from './components/NewTask';\nimport ShowTasks from './components/ShowTask';\nimport UpdateTask from './components/UpdateTask';\nimport RemoveTask from './components/RemoveTask';\n\nfunction App() {\n  const [current, setCurrent] = useState('main');\n  const [tasks, setTasks] = useState([]);\n  const [currentId, setCurrentId] = useState(0);\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    const storedCurrentId = JSON.parse(localStorage.getItem('currentId')) || 0;\n    setTasks(storedTasks);\n    setCurrentId(storedCurrentId);\n  }, []);\n\n  const showNewTask = () => setCurrent('newTask');\n  const showShowTasks = () => setCurrent('showTasks');\n  const showUpdateTask = () => setCurrent('updateTask');\n  const showRemoveTask = () => setCurrent('removeTask');\n  const showOptionsPanel = () => setCurrent('main');\n\n  const addTask = (newTask) => {\n    newTask.id = currentId;\n    setCurrentId(currentId + 1);\n\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    localStorage.setItem('currentId', JSON.stringify(currentId + 1));\n  };\n\n  const deleteTask = (taskId) => {\n    // Filter out the task with the provided ID\n    const updatedTasks = tasks.filter((task) => task.id !== parseInt(taskId));\n\n    setTasks(updatedTasks);\n\n    // Update tasks in localStorage\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n  };\n\n\nconst updateTask = (taskId, fieldToUpdate, newValue) => {\n  // Find the task with the provided ID\n  const taskIndex = tasks.findIndex((task) => task.id === parseInt(taskId));\n\n  if (taskIndex === -1) {\n    alert('Task not found with the provided ID.');\n    return;\n  }\n  // Create a copy of the task with the updated field\n  const updatedTasks = [...tasks];\n  updatedTasks[taskIndex] = {\n    ...updatedTasks[taskIndex],\n    [fieldToUpdate]: newValue,\n  };\n\n  setTasks(updatedTasks);\n\n  // Update tasks in localStorage\n  localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n};\n\n\n  return (\n    <div className=\"App\">\n      {current === 'main' && (\n        <OptionsPanel\n          onNewTask={showNewTask}\n          onShowTasks={showShowTasks}\n          onUpdateTask={showUpdateTask} \n          onRemoveTask={showRemoveTask}\n        />\n      )}\n      {current === 'newTask' && (\n        <NewTask onBackToOptionsPanel={showOptionsPanel} onAddTask={addTask} />\n      )}\n      {current === 'showTasks' && (\n        <ShowTasks tasks={tasks} onBackToOptionsPanel={showOptionsPanel} />\n      )}\n      {current === 'updateTask' && (\n        <UpdateTask\n          onUpdateTask={updateTask}\n          onBackToOptionsPanel={showOptionsPanel}\n        />\n      )}\n      {current === 'removeTask' && (\n        <RemoveTask\n          onDeleteTask={deleteTask}\n          onBackToOptionsPanel={showOptionsPanel}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IACnE,MAAMC,eAAe,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;IAC1EP,QAAQ,CAACG,WAAW,CAAC;IACrBD,YAAY,CAACM,eAAe,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAMX,UAAU,CAAC,SAAS,CAAC;EAC/C,MAAMY,aAAa,GAAGA,CAAA,KAAMZ,UAAU,CAAC,WAAW,CAAC;EACnD,MAAMa,cAAc,GAAGA,CAAA,KAAMb,UAAU,CAAC,YAAY,CAAC;EACrD,MAAMc,cAAc,GAAGA,CAAA,KAAMd,UAAU,CAAC,YAAY,CAAC;EACrD,MAAMe,gBAAgB,GAAGA,CAAA,KAAMf,UAAU,CAAC,MAAM,CAAC;EAEjD,MAAMgB,OAAO,GAAIC,OAAO,IAAK;IAC3BA,OAAO,CAACC,EAAE,GAAGf,SAAS;IACtBC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;IAE3B,MAAMgB,YAAY,GAAG,CAAC,GAAGlB,KAAK,EAAEgB,OAAO,CAAC;IACxCf,QAAQ,CAACiB,YAAY,CAAC;IAEtBX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAACF,YAAY,CAAC,CAAC;IAC3DX,YAAY,CAACY,OAAO,CAAC,WAAW,EAAEd,IAAI,CAACe,SAAS,CAAClB,SAAS,GAAG,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,MAAMmB,UAAU,GAAIC,MAAM,IAAK;IAC7B;IACA,MAAMJ,YAAY,GAAGlB,KAAK,CAACuB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKQ,QAAQ,CAACH,MAAM,CAAC,CAAC;IAEzErB,QAAQ,CAACiB,YAAY,CAAC;;IAEtB;IACAX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAACF,YAAY,CAAC,CAAC;EAC7D,CAAC;EAGH,MAAMQ,UAAU,GAAGA,CAACJ,MAAM,EAAEK,aAAa,EAAEC,QAAQ,KAAK;IACtD;IACA,MAAMC,SAAS,GAAG7B,KAAK,CAAC8B,SAAS,CAAEN,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKQ,QAAQ,CAACH,MAAM,CAAC,CAAC;IAEzE,IAAIO,SAAS,KAAK,CAAC,CAAC,EAAE;MACpBE,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IACA;IACA,MAAMb,YAAY,GAAG,CAAC,GAAGlB,KAAK,CAAC;IAC/BkB,YAAY,CAACW,SAAS,CAAC,GAAG;MACxB,GAAGX,YAAY,CAACW,SAAS,CAAC;MAC1B,CAACF,aAAa,GAAGC;IACnB,CAAC;IAED3B,QAAQ,CAACiB,YAAY,CAAC;;IAEtB;IACAX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAACF,YAAY,CAAC,CAAC;EAC7D,CAAC;EAGC,oBACEvB,OAAA;IAAKqC,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBnC,OAAO,KAAK,MAAM,iBACjBH,OAAA,CAACN,YAAY;MACX6C,SAAS,EAAExB,WAAY;MACvByB,WAAW,EAAExB,aAAc;MAC3ByB,YAAY,EAAExB,cAAe;MAC7ByB,YAAY,EAAExB;IAAe;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF,EACA3C,OAAO,KAAK,SAAS,iBACpBH,OAAA,CAACL,OAAO;MAACoD,oBAAoB,EAAE5B,gBAAiB;MAAC6B,SAAS,EAAE5B;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACvE,EACA3C,OAAO,KAAK,WAAW,iBACtBH,OAAA,CAACJ,SAAS;MAACS,KAAK,EAAEA,KAAM;MAAC0C,oBAAoB,EAAE5B;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnE,EACA3C,OAAO,KAAK,YAAY,iBACvBH,OAAA,CAACH,UAAU;MACT4C,YAAY,EAAEV,UAAW;MACzBgB,oBAAoB,EAAE5B;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACF,EACA3C,OAAO,KAAK,YAAY,iBACvBH,OAAA,CAACF,UAAU;MACTmD,YAAY,EAAEvB,UAAW;MACzBqB,oBAAoB,EAAE5B;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5C,EAAA,CA5FQD,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AA8FZ,eAAeA,GAAG;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}