{"ast":null,"code":"const JSON_FILENAME = 'tasks.json';\nconst loadTasksFromJsonFile = () => {\n  try {\n    const jsonTasks = localStorage.getItem(JSON_FILENAME);\n    return jsonTasks ? JSON.parse(jsonTasks) : [];\n  } catch (error) {\n    console.error('Error loading tasks:', error);\n    return [];\n  }\n};\nconst jsonTasks = localStorage.getItem(JSON_FILENAME);\nconst saveTasksToJsonFile = tasks => {\n  try {\n    const jsonTasks = JSON.stringify(tasks);\n    localStorage.setItem(JSON_FILENAME, jsonTasks);\n  } catch (error) {\n    console.error('Error saving tasks:', error);\n  }\n};\nexport const addTask = task => {\n  const existingTasks = loadTasksFromJsonFile();\n  const taskId = existingTasks.length;\n  const newTask = {\n    ...task,\n    id: taskId\n  };\n  const updatedTasks = [...existingTasks, newTask];\n  saveTasksToJsonFile(updatedTasks);\n};\nexport const removeTask = taskId => {\n  const existingTasks = loadTasksFromJsonFile();\n  const updatedTasks = existingTasks.filter(task => task.id !== parseInt(taskId));\n  saveTasksToJsonFile(updatedTasks);\n};\nexport const updateTask = (taskId, fieldToUpdate, updatedValue) => {\n  const existingTasks = loadTasksFromJsonFile();\n  const updatedTasks = existingTasks.map(task => {\n    if (task.id === parseInt(taskId)) {\n      return {\n        ...task,\n        [fieldToUpdate]: updatedValue\n      };\n    }\n    return task;\n  });\n  saveTasksToJsonFile(updatedTasks);\n};","map":{"version":3,"names":["JSON_FILENAME","loadTasksFromJsonFile","jsonTasks","localStorage","getItem","JSON","parse","error","console","saveTasksToJsonFile","tasks","stringify","setItem","addTask","task","existingTasks","taskId","length","newTask","id","updatedTasks","removeTask","filter","parseInt","updateTask","fieldToUpdate","updatedValue","map"],"sources":["/Users/franciscolopezmartinez/Desktop/task-manager-test/src/helper.js"],"sourcesContent":["const JSON_FILENAME = 'tasks.json';\n\nconst loadTasksFromJsonFile = () => {\n  try {\n    const jsonTasks = localStorage.getItem(JSON_FILENAME);\n    return jsonTasks ? JSON.parse(jsonTasks) : [];\n  } catch (error) {\n    console.error('Error loading tasks:', error);\n    return [];\n  }\n};\n\nconst jsonTasks = localStorage.getItem(JSON_FILENAME);\n\nconst saveTasksToJsonFile = (tasks) => {\n  try {\n    const jsonTasks = JSON.stringify(tasks);\n    localStorage.setItem(JSON_FILENAME, jsonTasks);\n  } catch (error) {\n    console.error('Error saving tasks:', error);\n  }\n};\n\nexport const addTask = (task) => {\n  const existingTasks = loadTasksFromJsonFile();\n  const taskId = existingTasks.length;\n\n  const newTask = {\n    ...task,\n    id: taskId,\n  };\n\n  const updatedTasks = [...existingTasks, newTask];\n\n  saveTasksToJsonFile(updatedTasks);\n};\n\nexport const removeTask = (taskId) => {\n  const existingTasks = loadTasksFromJsonFile();\n  const updatedTasks = existingTasks.filter((task) => task.id !== parseInt(taskId));\n  saveTasksToJsonFile(updatedTasks);\n};\n\nexport const updateTask = (taskId, fieldToUpdate, updatedValue) => {\n  const existingTasks = loadTasksFromJsonFile();\n  const updatedTasks = existingTasks.map((task) => {\n    if (task.id === parseInt(taskId)) {\n      return {\n        ...task,\n        [fieldToUpdate]: updatedValue,\n      };\n    }\n    return task;\n  });\n  saveTasksToJsonFile(updatedTasks);\n};\n  "],"mappings":"AAAA,MAAMA,aAAa,GAAG,YAAY;AAElC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAClC,IAAI;IACF,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAACJ,aAAa,CAAC;IACrD,OAAOE,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,EAAE;EAC/C,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAE;EACX;AACF,CAAC;AAED,MAAML,SAAS,GAAGC,YAAY,CAACC,OAAO,CAACJ,aAAa,CAAC;AAErD,MAAMS,mBAAmB,GAAIC,KAAK,IAAK;EACrC,IAAI;IACF,MAAMR,SAAS,GAAGG,IAAI,CAACM,SAAS,CAACD,KAAK,CAAC;IACvCP,YAAY,CAACS,OAAO,CAACZ,aAAa,EAAEE,SAAS,CAAC;EAChD,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC7C;AACF,CAAC;AAED,OAAO,MAAMM,OAAO,GAAIC,IAAI,IAAK;EAC/B,MAAMC,aAAa,GAAGd,qBAAqB,CAAC,CAAC;EAC7C,MAAMe,MAAM,GAAGD,aAAa,CAACE,MAAM;EAEnC,MAAMC,OAAO,GAAG;IACd,GAAGJ,IAAI;IACPK,EAAE,EAAEH;EACN,CAAC;EAED,MAAMI,YAAY,GAAG,CAAC,GAAGL,aAAa,EAAEG,OAAO,CAAC;EAEhDT,mBAAmB,CAACW,YAAY,CAAC;AACnC,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIL,MAAM,IAAK;EACpC,MAAMD,aAAa,GAAGd,qBAAqB,CAAC,CAAC;EAC7C,MAAMmB,YAAY,GAAGL,aAAa,CAACO,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKI,QAAQ,CAACP,MAAM,CAAC,CAAC;EACjFP,mBAAmB,CAACW,YAAY,CAAC;AACnC,CAAC;AAED,OAAO,MAAMI,UAAU,GAAGA,CAACR,MAAM,EAAES,aAAa,EAAEC,YAAY,KAAK;EACjE,MAAMX,aAAa,GAAGd,qBAAqB,CAAC,CAAC;EAC7C,MAAMmB,YAAY,GAAGL,aAAa,CAACY,GAAG,CAAEb,IAAI,IAAK;IAC/C,IAAIA,IAAI,CAACK,EAAE,KAAKI,QAAQ,CAACP,MAAM,CAAC,EAAE;MAChC,OAAO;QACL,GAAGF,IAAI;QACP,CAACW,aAAa,GAAGC;MACnB,CAAC;IACH;IACA,OAAOZ,IAAI;EACb,CAAC,CAAC;EACFL,mBAAmB,CAACW,YAAY,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}